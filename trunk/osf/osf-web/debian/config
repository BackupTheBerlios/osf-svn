#! /bin/bash

set -e
. /usr/share/debconf/confmodule
db_version 2.0
setpassword () {
	SETPASSWD_PW="$2"
	export SETPASSWD_PW

	# This is very annoying. chpasswd cannot handle generating md5
	# passwords as it is not PAM-aware. Thus, I have to work around
	# that by crypting the password myself if md5 is used.
#	db_get passwd/md5
#	if [ "$RET" = true ]; then
		USE_MD5=1
#	else
#		USE_MD5=''
#	fi
	export USE_MD5
	perl -e '
		sub CreateCryptSalt {
			my $md5 = shift;

			my @valid = split(//, "./0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");
			my ($in, $out);

			my $cryptsaltlen = ($md5 ? 8 : 2);

			open (F, "</dev/urandom") || die "No /dev/urandom found!";
			foreach (1..$cryptsaltlen) {
				read(F, $in, 1);
				$out .= $valid[ord($in) % ($#valid + 1)];
			}
			close F;
			return ($md5 ? "\$1\$$out\$" : $out);
		}
	
		open(P,"| chpasswd -e");
		print P shift().":".
			crypt($ENV{SETPASSWD_PW}, CreateCryptSalt($ENV{USE_MD5})).
		"\n";
	close P;
	' "$1"
	SETPASSWD_PW=''
	USE_MD5=''
}

if ! getent passwd virus-quarantine >/dev/null; then
	
	PASSWD_STATE=""

	while [ "x$PASSWD_STATE" != "xset" ] ; do
		db_fset "osf-web/user-password" "seen" "false" || true
		db_fset "osf-web/user-re-enter-password" "seen" "false" || true
		db_fset "osf-web/password-error" "seen" "false" || true
		db_reset "osf-web/user-password" || true
		db_reset "osf-web/user-re-enter-password" || true
		db_beginblock
			db_input high "osf-web/user-password" || true
			db_input high "osf-web/user-re-enter-password" || true
		db_endblock
		db_go
		db_get "osf-web/user-password"
		password1="$RET"

		db_get "osf-web/user-re-enter-password"
		password2="$RET"

		if [ "$password1" != "$password2" ] || [ -z "$password1" ] ; then
			db_reset "osf-web/user-password" || true
			db_fset "osf-web/user-password" "seen" "false" || true
			db_reset "osf-web/user-re-enter-password" || true
			db_fset "osf-web/user-re-enter-password" "seen" "false" || true
			db_input high "osf-web/password-error"
			db_go
		else
			PASSWD_STATE=set
			db_go
			db_stop
		fi
	done	
	getent passwd virus-quarantine >/dev/null 2>&1 || adduser --disabled-password --gecos "Virus quarantine" virus-quarantine

	setpassword virus-quarantine "$password2"
	unset password1 password2
fi
exit 0
